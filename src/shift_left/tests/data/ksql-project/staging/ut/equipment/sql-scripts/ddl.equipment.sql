CREATE TABLE IF NOT EXISTS equipment_stage_json_stream (
  service STRING,
  host STRING,
  port_id INT,
  bandwidth INT,
  system_id VARCHAR(256),
  system_type VARCHAR(256),
  octets_rx DOUBLE PRECISION,
  octets_tx DOUBLE PRECISION,
  unicast_rx DOUBLE PRECISION,
  unicast_tx DOUBLE PRECISION,
  op_state VARCHAR(256),
  discards_tx DOUBLE PRECISION,
  discards_rx DOUBLE PRECISION,
  multicast_rx DOUBLE PRECISION,
  multicast_tx DOUBLE PRECISION,
  collector_host VARCHAR(256),
  errors_tx DOUBLE PRECISION,
  errors_rx DOUBLE PRECISION,
  broadcast_tx DOUBLE PRECISION,
  broadcast_rx DOUBLE PRECISION,
  taskid VARCHAR(256),
  admin_state VARCHAR(256),
  `CONNECTOR` VARCHAR(256),
  utilization_rx DOUBLE PRECISION,
  utilization_tx DOUBLE PRECISION,
  nunicast_rx DOUBLE PRECISION,
  nunicast_tx DOUBLE PRECISION,
  total_pkts_rx DOUBLE PRECISION,
  total_pkts_tx DOUBLE PRECISION,
  discards_rx_pct DOUBLE PRECISION,
  discards_tx_pct DOUBLE PRECISION,
  errors_rx_pct DOUBLE PRECISION,
  errors_tx_pct DOUBLE PRECISION,
  collection_ts VARCHAR(256),
  datetimeutc VARCHAR(256),
  `time` VARCHAR(256),
  PRIMARY KEY(service) NOT ENFORCED
)
DISTRIBUTED BY HASH(service) INTO 1 BUCKETS 
WITH (
  'changelog.mode' = 'append',
  'key.avro-registry.schema-context' = '.flink-dev',
  'value.avro-registry.schema-context' = '.flink-dev',
  'value.format' = 'json-registry',
  'kafka.retention.time' = '0',
  'kafka.producer.compression.type' = 'snappy',
  'scan.bounded.mode' = 'unbounded',
  'scan.startup.mode' = 'earliest-offset',
  'value.fields-include' = 'all'
);